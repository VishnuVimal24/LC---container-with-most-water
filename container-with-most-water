class Solution:
    def maxArea(self, height: List[int]) -> int:
        
        #Brute Force approach
       # res = 0 #a.k.a. area and 0 is there because no negative result will be obtained

       # for l in range(len(height)):
       #     for r in range(l+1, len(height)):
       #         area = (r-l) * min(height[l], height[r]) # area = width * height 
       #         #height must be min because the water will spill if min is at left/right
       #         res = max(res, area)
        res = 0
        l, r = 0,len(height) - 1

        while l < r:
            area = (r-l) * min(height[l], height[r])
            res = max(res, area)

            if height[l] < height[r]:
                l +=1
            
            elif height[l] < height[r]:
                r-=1
            else:
                r-=1 # this case is applied if both l and r are equal, then either l+=1 or r-=1 can be used 
        return res


                
        
